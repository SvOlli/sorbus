; Copyright (c) 2025 Sven Oliver "SvOlli" Moll
;
; SPDX-License-Identifier: GPL-3.0-or-later
;
; discussion:
; https://forums.raspberrypi.com/viewtopic.php?p=2304792#p2304792

; this code needs to run on an RP2040
.pio_version 0

.define public DATABUS0  0
.define public CLK       8
.define public R_W       9
.define public CS1       10
.define public CS0       11
.define public ADDRBUS0  12

.define public OUTPINS   8
.define public INPINS    20

.program sound_bus_wait

; step 1: wait for system bus
.wrap_target
loop:
;   ;wait 1 gpio CS1      ; check for CS1 to go high
;   ;wait 0 gpio CS0 ; jmp pin loop         ; check for CS2 to go low
;   ;wait 1 gpio CLK [2]  ; wait for CLK
;   in pins, INPINS
;   mov osr, !null
;   out pins, OUTPINS    ; dummy output on databus: $FF, everything pulled up
;                        ; intended to be overwritten by C code during write,
;                        ; ignored during read
;   out pindirs, OUTPINS ; set datapins to output, just in case
;   wait 0 gpio CLK      ; wait for CLK
;   mov osr, null        ; cleanup by
;   out pindirs, OUTPINS ; setting databus to input again

   wait 0 gpio R_W      ; first wait for r/w to go low (write)
   wait 1 gpio CLK  [2] ; now wait for clock to go high (and a bit more)

;   wait 1 gpio CLK
;   jmp pin loop
   in pins, INPINS      ; send out addressbus and databus state
   wait 0 gpio CLK      ; and wait for clock to go low again
                        ; to prevent too fast reentering
.wrap
